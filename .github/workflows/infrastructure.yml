name: Create ECR repository and EKS Cluster

# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch
on:
  workflow_dispatch

env:
  AWS_REGION: us-east-2                   
  ECR_REPOSITORY: express-image

jobs:
  create:
    name: Create ECR repository
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Create Amazon ECR
      id: ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        aws ecr create-repository --repository-name $ECR_REPOSITORY --region $AWS_REGION
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
    

    - name: eksctl-cmd
      uses: robatwave/github-action-eksctl@0.1.2
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}

    - name: Create Amazon EKS Cluster
      run: eksctl create cluster -f eksctl/cluster.yml
         